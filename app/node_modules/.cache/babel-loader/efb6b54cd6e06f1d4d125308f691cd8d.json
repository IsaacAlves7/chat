{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ipinheiro\\\\Desktop\\\\chat-projects\\\\app\\\\src\\\\components\\\\menu\\\\Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { getUsers } from '../../service/api';\nimport { Box } from '@material-ui/core';\nimport Conversation from './Conversation';\nimport { AccountContext } from '../../context/AccountProvider';\nimport { use } from 'express/lib/application';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Conversations = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const {\n    account\n  } = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getUsers();\n      setUsers(data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: users.map(user =>\n    /*#__PURE__*/\n    // user.googleId !== id\n    _jsxDEV(Conversation, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Conversations, \"TxH6E2zcXHXT5oF8wiqT0MEyckw=\");\n\n_c = Conversations;\nexport default Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["C:/Users/ipinheiro/Desktop/chat-projects/app/src/components/menu/Conversations.jsx"],"names":["useEffect","useState","useContext","getUsers","Box","Conversation","AccountContext","use","Conversations","users","setUsers","account","fetchData","data","map","user"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAASC,GAAT,QAAoB,yBAApB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcV,QAAQ,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAW;AACzB,YAAMC,IAAI,GAAG,MAAMV,QAAQ,EAA3B;AACAO,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACH,KAHD;;AAIAD,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,GAAD;AAAA,cAEMH,KAAK,CAACK,GAAN,CAAUC,IAAI;AAAA;AACZ;AACA,YAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAFN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBD;;GAAMP,a;;KAAAA,a;AAyBN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport { getUsers } from '../../service/api';\r\nimport { Box } from '@material-ui/core';\r\nimport Conversation from './Conversation';\r\nimport {AccountContext} from '../../context/AccountProvider';\r\nimport { use } from 'express/lib/application';\r\n\r\nconst Conversations = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const { account } = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const data = await getUsers();\r\n            setUsers(data);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            {\r\n              users.map(user => (\r\n                // user.googleId !== id\r\n                <Conversation user={user}/>\r\n              ))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Conversations;"]},"metadata":{},"sourceType":"module"}