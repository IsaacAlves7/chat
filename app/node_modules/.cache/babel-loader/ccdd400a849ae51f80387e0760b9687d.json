{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ipinheiro\\\\Desktop\\\\chat-projects\\\\app\\\\src\\\\components\\\\menu\\\\Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { getUsers } from '../../service/api';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Conversation from './Conversation';\nimport { AccountContext } from '../../context/AccountProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  component: {\n    height: '22vh',\n    overflow: 'overlay'\n  }\n});\n\nconst Conversations = _ref => {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const classes = useStyles();\n  const [users, setUsers] = useState([]);\n  const {\n    account\n  } = useContext(AccountContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await getUsers();\n      const filteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n      setUsers(filteredData);\n    };\n\n    fetchData();\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.component,\n    children: users.map(user => user.googleId !== account.googleId && /*#__PURE__*/_jsxDEV(Conversation, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 73\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Conversations, \"rybUzCl5nBjNVA55JwerFix24Pg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Conversations;\nexport default Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["C:/Users/ipinheiro/Desktop/chat-projects/app/src/components/menu/Conversations.jsx"],"names":["useEffect","useState","useContext","getUsers","Box","makeStyles","Conversation","AccountContext","useStyles","component","height","overflow","Conversations","text","classes","users","setUsers","account","fetchData","data","filteredData","filter","user","name","toLowerCase","includes","map","googleId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AACzBI,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AADc,CAAD,CAA5B;;AAOA,MAAMC,aAAa,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAcf,UAAU,CAACK,cAAD,CAA9B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,SAAS,GAAG,YAAW;AACzB,YAAMC,IAAI,GAAG,MAAMhB,QAAQ,EAA3B;AACA,YAAMiB,YAAY,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCZ,IAAI,CAACW,WAAL,EAAjC,CAApB,CAArB;AACAR,MAAAA,QAAQ,CAACI,YAAD,CAAR;AACH,KAJD;;AAKAF,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACL,IAAD,CAPM,CAAT;AASA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACL,SAAxB;AAAA,cAEMM,KAAK,CAACW,GAAN,CAAUJ,IAAI,IAAMA,IAAI,CAACK,QAAL,KAAkBV,OAAO,CAACU,QAA1B,iBAAsC,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,YAA1D;AAFN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtBD;;GAAMV,a;UACcJ,S;;;KADdI,a;AAwBN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport { getUsers } from '../../service/api';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Conversation from './Conversation';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        height: '22vh',\r\n        overflow: 'overlay'\r\n    }\r\n});\r\n\r\nconst Conversations = ({ text }) => {\r\n    const classes = useStyles();\r\n    \r\n    const [users, setUsers] = useState([]);\r\n    const { account } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const data = await getUsers();\r\n            const filteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\r\n            setUsers(filteredData);\r\n        }\r\n        fetchData();\r\n    }, [text]);\r\n\r\n    return (\r\n        <Box className={classes.component}>\r\n            {\r\n              users.map(user => ( user.googleId !== account.googleId && <Conversation user={user}/>))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Conversations;"]},"metadata":{},"sourceType":"module"}